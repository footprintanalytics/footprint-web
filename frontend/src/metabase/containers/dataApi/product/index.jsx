/* eslint-disable react/prop-types */
import React from "react";
import "./index.css";
import "../index.css";
import { push } from "react-router-redux";
import { loginModalShowAction } from "metabase/redux/control";
import { connect } from "react-redux";
import GetStart from "metabase/containers/dataApi/product/components/GetStart";
import DomainDetail from "metabase/containers/dataApi/product/components/DomainDetail";
import PowerfulData from "metabase/containers/dataApi/product/components/PowerfulData";
import ReadyBuild from "metabase/containers/dataApi/product/components/ReadyBuild";

const Index = ({ user, setLoginModalShow, onChangeLocation }) => {
  const domainData = [
    {
      title: "NFT Metadata",
      desc: [
        "Retrieving NFT metadata from the blockchain is tedious and time-consuming.",
        "Get all NFT metadata from Footprint Analytics in one single API call.",
      ],
      img: "img_dap_power_2022102311.png",
      bgClassName: "domain-detail__nft-Metadata-bg",
      buttonText: "See metadata endpoints",
      buttonLink:
        "https://docs.footprint.network/reference/get_nft-chain-collection-collection-contract-address-attributes",
    },
    {
      title: "NFT ownership data",
      desc: [
        "With NFTs constantly changing hands, ownership is an evolving landscape.",
        "Identify and confirm the owner of a specific NFT or of an entire collection, in just a single API call.",
      ],
      img: "img_dap_power_2022102312.png",
      bgClassName: "domain-detail__nft-ownership-bg",
      buttonText: "See ownership endpoints",
      buttonLink:
        "https://docs.footprint.network/reference/get_nft-chain-nft-latest-stats-collection-contract-address",
      direction: "row-reverse",
    },
    {
      title: "NFT transfer data",
      desc: [
        "Using our NFT data to get the lastet NFT transfers and transactions.",
        "You can query and display an extensive range of data related to not matter a specified NFT or a NFT collection or a wallet. ",
      ],
      img: "img_dap_power_2022102313.png",
      bgClassName: "domain-detail__nft-transfer-bg",
      buttonText: "See transfer endpoints",
      buttonLink:
        "https://docs.footprint.network/reference/get_nft-chain-collection-collection-contract-address-transfers",
    },
    {
      title: "NFT listing & floor price",
      desc: [
        "Getting all the detailed NFT transaction history and portfolio summaries for any wallet.",
        "Our API provides multi-dimensional data such as Holding value, PnL, activities generated by the address and more.",
      ],
      img: "img_dap_power_2022102314.png",
      bgClassName: "domain-detail__nft-floor-price-bg",
      buttonText: "See listing endpoints",
      buttonLink:
        "https://docs.footprint.network/reference/get_nft-ranking-top-collections",
      direction: "row-reverse",
    },
    {
      title: "NFT asset profile",
      desc: [
        "Getting all the detailed NFT transaction history and portfolio summaries for any wallet.",
        "Our API provides multi-dimensional data such as Holding value, PnL, activities generated by the address and more.",
      ],
      img: "img_dap_power_2022102315.png",
      bgClassName: "domain-detail__nft-asset-bg",
      buttonText: "Coming soon",
      buttonLink: "",
      buttonClassName: "data-api__button-white",
    },
  ];

  return (
    <div className="data-api__product">
      <GetStart />
      {domainData.map(item => {
        return (
          <DomainDetail
            key={item.title}
            title={item.title}
            desc={item.desc}
            img={item.img}
            bgClassName={item.bgClassName}
            buttonText={item.buttonText}
            buttonLink={item.buttonLink}
            buttonClassName={item.buttonClassName}
            direction={item.direction}
          />
        );
      })}
      <PowerfulData />
      <ReadyBuild />
    </div>
  );
};

const mapStateToProps = state => {
  return {
    user: state.currentUser,
  };
};

const mapDispatchToProps = {
  onChangeLocation: push,
  setLoginModalShow: loginModalShowAction,
};

export default connect(mapStateToProps, mapDispatchToProps)(Index);
