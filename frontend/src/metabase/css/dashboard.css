.DashboardHeader {
  background-color: white;
  /*border-bottom: var(--border-size) var(--border-style) var(--color-border);*/
}

.Dash-wrapper {
  width: 100%;
}

@media screen and (--breakpoint-min-sm) {
  .Dash-wrapper {
    max-width: var(--sm-width);
  }
}

@media screen and (--breakpoint-min-md) {
  .Dash-wrapper {
    max-width: var(--md-width);
  }
}

@media screen and (--breakpoint-min-lg) {
  .Dash-wrapper {
    max-width: var(--lg-width);
  }
}

/* Fullscreen mode */
.Dashboard.Dashboard--fullscreen {
  min-height: 100vh;
}

.Dashboard.Dashboard--fullscreen .Header-button {
  color: var(--color-text-light);
}

.Dashboard.Dashboard--fullscreen .Header-title-description {
  display: none;
}

/* Night mode */
.Dashboard.Dashboard--night {
  background-color: var(--color-bg-black);
}

.Dashboard.Dashboard--night .Card {
  color: var(--color-text-white);
}

.Dashboard.Dashboard--night .Header-button {
  color: var(--color-text-medium);
}

.Dashboard.Dashboard--fullscreen .fullscreen-normal-text {
  color: var(--color-text-dark);
  transition: color 1s linear;
}

.Dashboard.Dashboard--night.Dashboard--fullscreen .fullscreen-night-text {
  color: color(var(--color-text-white) alpha(-14%));
  transition: color 1s linear;
}

.Dashboard.Dashboard--night .DashCard .Card svg text {
  fill: color(var(--color-text-white) alpha(-14%)) !important;
}

.Dashboard.Dashboard--night .DashCard .Card {
  background-color: var(--night-mode-card);
  border-color: var(--night-mode-card);
}

.Dashboard.Dashboard--night .enable-dots-onhover .dc-tooltip circle.dot:hover,
.Dashboard.Dashboard--night .enable-dots .dc-tooltip circle.dot {
  fill: currentColor;
}

.Dashboard.Dashboard--night .bg-light {
  background-color: var(--color-bg-black);
}

.Dashboard.Dashboard--night .bg-medium {
  background-color: #596269;
}

.Dashboard.Dashboard--night .text-dark {
  color: var(--color-bg-light);
}

.Dashboard.Dashboard--night .border-top,
.Dashboard.Dashboard--night .border-left,
.Dashboard.Dashboard--night .border-bottom,
.Dashboard.Dashboard--night .border-right {
  border-color: var(--color-bg-dark);
}

/* Night mode transition */
.Dashboard.Dashboard--fullscreen,
.Dashboard.Dashboard--fullscreen .DashCard .Card {
  transition: background-color 1s linear, border 1s linear;
}

.DashboardGrid {
  margin-top: 1em;
}

.Dash--editing {
  margin-top: 1.5em;
}

.DashCard {
  position: relative;
  z-index: 2;
}

.DashCard .Card {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background-color: white;
  border: 1px solid var(--color-border);
}

.DashCard .Card.Card--slow {
  border-color: var(--color-accent4);
}

.Dash--editing .DashCard .Card {
  transition: border 0.3s, background-color 0.3s;
}

.Dash--editing .Card-title:first-of-type {
  /*margin-top: 0.5rem;*/
}

.Dash--editing .DashCard:hover .Card .Card-heading {
  z-index: 2;
}

/* Google Maps widgets */
.DashCard .gm-style-mtc,
.DashCard .gm-bundled-control,
.DashCard .PinMapUpdateButton,
.leaflet-container .leaflet-control-container {
  opacity: 0.01;
  transition: opacity 0.3s linear;
}
.DashCard:hover .gm-style-mtc,
.DashCard:hover .gm-bundled-control,
.DashCard:hover .PinMapUpdateButton,
.leaflet-container:hover .leaflet-control-container {
  opacity: 1;
}

.Dash--editing .PinMap {
  /* allow map to pan. need to stopPropagation in PinMap to prevent weird dragging interaction */
  pointer-events: all;
}

.PinMapUpdateButton--disabled {
  pointer-events: none;
  color: var(--color-text-light);
}

.DashCard .Card {
  border: 1px solid #f0f0f0;
  border-radius: 8px;
}

.Dash--editing .DashCard.react-draggable-dragging .Card {
  box-shadow: 3px 3px 8px var(--color-shadow);
}

.Dash--editing .DashCard.react-draggable-dragging,
.Dash--editing .DashCard.react-resizable-resizing {
  z-index: 3;
}

.Dash--editing .DashCard.react-draggable-dragging .Card,
.Dash--editing .DashCard.react-resizable-resizing .Card {
  background-color: var(--color-bg-medium) !important;
  border: 1px solid var(--color-brand);
}

.Dash--editing .DashCard .Visualization-slow-spinner {
  position: absolute;
  right: -2px;
  top: -2px;
}
.Dash--editing .DashCard:hover .Visualization-slow-spinner {
  opacity: 0;
  transition: opacity 0.15s linear;
}

.Dash--editing .DashCard {
  cursor: move;
}

.Dash--editing .DashCard .react-resizable-handle {
  position: absolute;
  width: 40px;
  height: 40px;
  bottom: 0;
  right: 0;
  z-index: 1; /* ensure the handle is above the card contents */

  /* overwrites the style coming from react-grid-layout */
  cursor: nwse-resize !important;
  background: none; /* hide default RGL's resize handle */
}

.Dash--editing .DashCard .react-resizable-handle:after {
  content: "";
  position: absolute;
  width: 8px;
  height: 8px;
  bottom: 6px;
  right: 6px;
  border-bottom: 2px solid var(--color-border);
  border-right: 2px solid var(--color-border);
  border-bottom-right-radius: 2px;
  transition: opacity 0.2s;
  opacity: 0.01;
}

.Dash--editing .DashCard .react-resizable-handle:hover:after {
  border-color: var(--color-border);
}

.Dash--editing .DashCard:hover .react-resizable-handle:after {
  opacity: 1;
}

.Dash--editing .DashCard.react-draggable-dragging .react-resizable-handle:after,
.Dash--editing
  .DashCard.react-resizable-resizing
  .react-resizable-handle:after {
  opacity: 0.01;
}

.Dash--editing .react-grid-placeholder {
  z-index: 0;
  background-color: var(--color-bg-light) !important;
  transition: all 0.15s linear;
}

.Dash--editing .Card-title {
  pointer-events: none;
}

.Modal.AddSeriesModal {
  height: 80%;
  /* max-height: 600px; */
  width: 80%;
  /* max-width: 1024px; */
}

/*

  fullscreen text size modifications

*/

/*
  increase the base font size in fullscreen mode to bump things up to
  accomodate for viewing distance on TVs etc
*/
@media screen and (min-width: 1280px) {
  .Dashboard.Dashboard--fullscreen {
    font-size: 1.2em;
  }
  /* keep the dashboard header title from being overwhelmingly large */
  .Dashboard.Dashboard--fullscreen .Header-title-name {
    font-size: 1em;
  }
  /* keep the single row text cards to avoid overflow with a scroll bar */
  .Dashboard.Dashboard--fullscreen .Text--single-row {
    font-size: 0.85em;
  }
  .Dashboard.Dashboard--fullscreen .fullscreen-text-small .LegendItem {
    font-size: 1em;
  }
}

@media screen and (min-width: 1540px) {
  .Dashboard.Dashboard--fullscreen {
    font-size: 1.4em;
  }
}

/* what for to print the dashboards */
@media print {
  header,
  nav {
    display: none;
  }
  .DashCard .Card {
    box-shadow: none;
    border-color: var(--color-border);
  }
  /* improve label contrast */
  .dc-chart .axis .tick text,
  .dc-chart .x-axis-label,
  .dc-chart .y-axis-label {
    fill: var(--color-text-dark);
  }
}

@media print and (orientation: portrait) {
  html {
    width: 8.5in;
  }
}
@media print and (orientation: landscape) {
  html {
    width: 11in;
  }
}

@page {
  margin: 1cm;
}

/* when in night mode goal lines should be more visible */
.Dashboard--night .goal .line,
.Dashboard--night .trend .line {
  stroke: white;
}

/* when in night mode code snippets should have a more readable background-color */
.Dashboard--night pre code {
  background-color: color(var(--color-bg-white) alpha(-86%));
}

.Dashboard--night text.value-label-outline {
  stroke: var(--night-mode-card);
}

.Dashboard text.value-label,
.Dashboard text.value-label-outline,
.Dashboard text.value-label-white,
.Dashboard .LineAreaBarChart .dc-chart .axis text {
  font-size: 12px;
}

.ScalarValue {
  font-weight: normal;
  font-size: 22px;
}

.SmartWrapper {
  font-size: 14px;
  color: #84848a;
}

.Dashboard .SmartWrapper {
  position: relative;
  font-size: inherit;
}

.AutomaticDashboard.AutomaticDashboard--withSidebar #SmartScalar-PreviousValue {
  display: none !important;
}

@media screen and (min-width: 1280px) {
  .ScalarValue {
    font-size: 28px;
  }
  .AutomaticDashboard.AutomaticDashboard--withSidebar
    #SmartScalar-PreviousValue {
    display: none;
  }
}

@media screen and (min-width: 1540px) {
  .ScalarValue {
    font-size: 36px;
  }
  .AutomaticDashboard.AutomaticDashboard--withSidebar
    #SmartScalar-PreviousValue {
    display: inherit;
  }
}

@media screen and (min-width: 2048px) {
  .ScalarValue {
    font-size: 48px;
  }
  .AutomaticDashboard.AutomaticDashboard--withSidebar
    #SmartScalar-PreviousValue {
    display: inherit;
  }
}

.dashboardCopyModalRoot {
  margin: auto;
  width: 700px;
  max-height: 90%;
  overflow-y: auto;
}

#html2canvas-Dashboard {
  overflow-y: scroll;
  overflow-x: hidden;
}

/* coin360 mode */
.Dashboard.Dashboard--coin360 {
  background-color: var(--coin360-black);
}

.Dashboard.Dashboard--coin360 .Card {
  color: var(--color-text-white);
}

.Dashboard.Dashboard--coin360 .Header-button {
  color: var(--color-text-medium);
}

.Dashboard.Dashboard--fullscreen .fullscreen-normal-text {
  color: var(--color-text-dark);
  transition: color 1s linear;
}

.Dashboard.Dashboard--coin360.Dashboard--fullscreen .fullscreen-night-text {
  color: color(var(--color-text-white) alpha(-14%));
  transition: color 1s linear;
}

.Dashboard.Dashboard--coin360 .DashCard .Card svg text {
  fill: color(var(--color-text-white) alpha(-14%)) !important;
}

.Dashboard.Dashboard--coin360 .DashCard .Card {
  background-color: var(--coin360-card);
  border-color: var(--coin360-card);
}

.Dashboard.Dashboard--coin360 .enable-dots-onhover .dc-tooltip circle.dot:hover,
.Dashboard.Dashboard--coin360 .enable-dots .dc-tooltip circle.dot {
  fill: currentColor;
}

.Dashboard.Dashboard--coin360 .bg-light {
  background-color: var(--coin360-black);
}

.Dashboard.Dashboard--coin360 .bg-medium {
  background-color: var(--coin360-black);
}

.Dashboard.Dashboard--coin360 .text-dark {
  color: var(--coin360-light);
}

.Dashboard.Dashboard--coin360 .border-top,
.Dashboard.Dashboard--coin360 .border-left,
.Dashboard.Dashboard--coin360 .border-bottom,
.Dashboard.Dashboard--coin360 .border-right {
  border-color: var(--coin360-black);
}

.Dashboard--coin360 .goal .line,
.Dashboard--coin360 .trend .line {
  stroke: white;
}

.Dashboard--coin360 .Scalar-title,
.Dashboard--coin360 .ScalarValue,
.Dashboard--coin360 .text-card-markdown h1 {
  color: white !important;
}

.Dashboard--coin360 .CardVisualization thead {
  background: rgba(255, 255, 255, 0.03) !important;
}

.Dashboard--coin360 .Table__Table___CtorL th {
  border-bottom-color: rgba(255, 255, 255, 0.03) !important;
}

.FieldSet--coin360 {
  border-color: white !important;
}

.ParameterFieldWidget--coin360,
.FieldSet--coin360 .Icon-close {
  color: white !important;
}

/* when in night mode code snippets should have a more readable background-color */
.Dashboard--coin360 pre code {
  background-color: rgba(255, 255, 255, 0.03);
  color: hsla(0, 0%, 100%, 0.5);
}

.Dashboard--coin360 text.value-label-outline {
  stroke: var(--coin360-card);
}

.Theme--coin360 .text-brand {
  color: var(--color-white);
}

.Theme--coin360 .LoadingSpinner__title {
  color: var(--color-white);
}

@media screen and (--footprint-breakpoint-max-mobile) {
  .CardsContainer,
  .TagWidgetContainer {
    padding: 0 10px !important;
  }
}
